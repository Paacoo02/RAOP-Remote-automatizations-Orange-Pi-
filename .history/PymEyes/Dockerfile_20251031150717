# syntax=docker/dockerfile:1.6

# ======================================================
# 💿 Base
# ======================================================
FROM node:20-slim
ENV DEBIAN_FRONTEND=noninteractive
WORKDIR /app

# ======================================================
# 🔧 Sistema (Chromium deps + Python + X) con caché APT
# ======================================================
RUN --mount=type=cache,target=/var/cache/apt \
    --mount=type=cache,target=/var/lib/apt \
    set -eux; \
    apt-get update; \
    apt-get install -y --no-install-recommends \
      ca-certificates curl wget xz-utils gnupg \
      python3 python3-venv python3-pip \
      iproute2 iputils-ping procps \
      openssh-server xvfb x11vnc fluxbox novnc websockify xauth \
      # deps típicas de Chromium/Playwright
      libnss3 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxdamage1 \
      libxfixes3 libxi6 libxrender1 libxrandr2 libxtst6 libglib2.0-0 libatk1.0-0 libatk-bridge2.0-0 \
      libdrm2 libgbm1 libasound2 libxkbcommon0 libgtk-3-0 libgtk-4-1 libgtk-4-bin \
      libxss1 libxshmfence1 libu2f-udev libatspi2.0-0 \
      libgstreamer1.0-0 libgstreamer-plugins-base1.0-0 \
      fonts-liberation fonts-freefont-ttf fonts-dejavu fonts-noto-color-emoji \
      libatomic1 libevent-2.1-7; \
    rm -rf /var/lib/apt/lists/*

# ======================================================
# 📦 Node: instala deps usando SOLO tus manifiestos
#      (evita desalinear playwright/playwright-core)
# ======================================================
# Copiamos SOLO manifiestos para maximizar caché
COPY package.json ./
COPY package-lock.json ./

# Cache NPM + instalación reproducible
RUN --mount=type=cache,target=/root/.npm \
    npm ci --omit=dev

# ======================================================
# 🧭 Playwright: instala binarios para la versión ya instalada
# ======================================================
ENV PLAYWRIGHT_BROWSERS_PATH=/ms-playwright
RUN mkdir -p /ms-playwright

# Descarga la revisión EXACTA que pide tu node_modules
RUN --mount=type=cache,target=/root/.cache/ms-playwright \
    npx playwright install --with-deps chromium

# ======================================================
# 🧠 Python venv EXACTO donde lo espera tu app (/app/venv)
# ======================================================
RUN python3 -m venv /app/venv
ENV PATH="/app/venv/bin:$PATH"

# Copiamos primero requirements para cachear pip
COPY requirements.txt ./
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --default-timeout=120 --retries=5 -r requirements.txt

# ======================================================
# ⚙️ Ahora sí, el resto del código
# ======================================================
COPY . .
RUN chmod +x /app/start.sh || true

# ======================================================
# 🌍 Exposición + entorno
# ======================================================
EXPOSE 3000
ENV NODE_ENV=production \
    DISPLAY=:99 \
    XVFB_RESOLUTION=1920x1080x24 \
    HEADLESS=false \
    TZ=Europe/Madrid \
    LANG=C.UTF-8

# ======================================================
# 🚀 Entrypoint
# ======================================================
CMD ["bash", "./start.sh"]
