# syntax=docker/dockerfile:1.6
# ======================================================
# üíø Imagen base
# ======================================================
FROM node:20-slim
ENV DEBIAN_FRONTEND=noninteractive

# ======================================================
# üîß Dependencias del sistema (Entorno gr√°fico, Python, SSH)
# ======================================================
RUN set -eux; \
  apt-get update; \
  apt-get install -y --no-install-recommends \
    ca-certificates curl wget xz-utils gnupg openssh-server iproute2 iptables iputils-ping procps \
    python3 python3-venv python3-pip \
    xvfb x11vnc fluxbox novnc websockify xauth \
    fonts-liberation libnss3 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxdamage1 \
    libxfixes3 libxi6 libxrender1 libxrandr2 libxtst6 libglib2.0-0 libatk1.0-0 libatk-bridge2.0-0 \
    libdrm2 libgbm1 libasound2 libxkbcommon0 libgtk-3-0 libgtk-4-1 libgtk-4-bin \
    libgstreamer1.0-0 gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-tools \
    fonts-freefont-ttf fonts-dejavu fonts-noto-color-emoji \
    libatomic1 libevent-2.1-7 libavif15 libharfbuzz-icu0 libenchant-2-2 \
    libsecret-1-0 libhyphen0 libmanette-0.2-0 libxss1; \
  if apt-cache show libwoff2dec1 >/dev/null 2>&1; then \
    apt-get install -y --no-install-recommends libwoff2dec1; \
  elif apt-cache show libwoff2-1 >/dev/null 2>&1; then \
    apt-get install -y --no-install-recommends libwoff2-1; \
  elif apt-cache show libwoff1 >/dev/null 2>&1; then \
    apt-get install -y --no-install-recommends libwoff1; \
  else \
    echo "Aviso: paquete WOFF(2) no encontrado, continuamos..."; \
  fi; \
  rm -rf /var/lib/apt/lists/*

WORKDIR /app

# ======================================================
# üì¶ Node + Playwright (ROBUSTO ‚úÖ sin package-lock)
# ======================================================
ENV PLAYWRIGHT_VERSION=1.47.2
ENV PLAYWRIGHT_BROWSERS_PATH=/ms-playwright
RUN mkdir -p /ms-playwright && chown -R root:root /ms-playwright

COPY package*.json ./

# Usa npm ci si hay lockfile; si no, npm install. Luego instala playwright y sus browsers.
RUN --mount=type=cache,target=/root/.npm bash -lc '\
  if [ -f package-lock.json ]; then \
    echo "üîí package-lock.json encontrado ‚Üí npm ci"; \
    npm ci --omit=dev; \
  else \
    echo "‚ÑπÔ∏è Sin lockfile ‚Üí npm install"; \
    npm install --omit=dev; \
  fi && \
  npm install playwright@${PLAYWRIGHT_VERSION} && \
  npx playwright install --with-deps chromium \
'


# ======================================================
# üß† Entorno de Python
# ======================================================
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

COPY requirements.txt ./
RUN --mount=type=cache,target=/root/.cache/pip \
    if [ -f requirements.txt ]; then \
      pip install --default-timeout=120 --retries=5 --no-cache-dir -r requirements.txt; \
    fi

# ======================================================
# üîê Configuraci√≥n de SSH
# ======================================================
RUN useradd -ms /bin/bash devuser && echo "devuser:devpass" | chpasswd && \
    echo "root:root" | chpasswd && mkdir -p /var/run/sshd && \
    sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config && \
    sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config && \
    echo "AllowUsers devuser root" >> /etc/ssh/sshd_config

# ======================================================
# ‚öôÔ∏è Copia de c√≥digo y permisos
# ======================================================
COPY . .
RUN chmod +x /app/start.sh /app/clear_ssh_host.sh || true

EXPOSE 22 6080 5901

# ======================================================
# üåô Configuraci√≥n del entorno por defecto
# ======================================================
ENV NODE_ENV=production \
    DISPLAY=:99 \
    XVFB_RESOLUTION=1920x1080x24 \
    HEADLESS=false

CMD ["/bash", ".start.sh"]